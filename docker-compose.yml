
version: '3.7'
services:
  redis:
    image: redis:alpine
    ports:
      - "6380:6380"
    container_name: redis-ground
    command: --port 6380 --save "" --appendonly no
    networks:
      - ground_network

  database:
    image: 'postgres:latest'
    container_name: database-ground
    ports:
      - "5432:5432"
    env_file:
      - backend/.env
    volumes:
      - ./volumes/db-data/:/var/lib/postgresql/data/
    networks:
      - ground_network


  web:
    container_name: backend_ground
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - redis
      - database
    volumes:
      - ./backend:/app
    env_file:
      - backend/.env
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    networks:
      - ground_network

  communication_server:
    container_name: communication_server_ground
    build:
      context: ./interfaces/communication
    depends_on:
      - redis
      - database
    env_file:
      - backend/.env
    volumes:
      - ./interfaces/communication:/app/interfaces/communication
    command: python /app/interfaces/communication/CommunicationServer.py 0.0.0.0
    ports:
      - "27015:27015"
    networks:
      - ground_network

  nvs_serve:
    container_name: nvs_server
    build:
      context: ./interfaces/video_streaming
    depends_on:
      - redis
    ports:
      - "7000:7000"
      - "7001:7001/udp"
    networks:
      - ground_network
    command: ["python3", "VideoStreaming.py"]

networks:
    ground_network:
        external: true
